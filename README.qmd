---
title: "**canape** - **C**ycle **ANA**lyzer of **PE**rformance :bicyclist:"
format: gfm
jupyter: python3
---

`canape` is a lightweight software to read, process, and analyze `.gpx` data from [Strava](https://strava.com).
The `Ride` class allows to read a file and converts it to a `pandas` data frame.

### Import data

Importing the `Ride` class allows to read from Strave `*.gpx` files:
```{python}
from canape import Ride

ride = Ride("data/After_Riccione.gpx")
ride.data[['ele', 'time', 'power', 'lon', 'lat', 'speed']].head()
```

### Functionality

Helper functions allows to show a summary of relevant statistics like the normalized power, average speed, or climbed meters:
```{python}
ride.summary
```

Setting an FTP automatically calculates further statistics such as the intensity factor or stress level:
```{python}
ride.setFTP(250)
ride.summary
```

The same can be done for the body weight in kg:
```{python}
ride.setWeight(75)
ride.summary
```

The method `.powerCurve()` yields the maximal power over 1, 3, 5, 10, 30 seconds, 1, 5, 10, 20,
30 minutes, and 1 hour:
```{python}
ride.powerCurve()
```

The same principle to obtain maximal values over specific time windows can be applied for any column
with `.rollMax()`:
```{python}
ride.rollMax(window = [1, 30, 600], vname = 'speed')
ride.rollMax(vname = 'watt_kg')
```

## Plotting is done with plotly as backend:
```{python}
#| eval: false
ride.plotData('power').show()
ride.plotData('watt_kg').show()
```
![](README_files/plolty-power.png)
